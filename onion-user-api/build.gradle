plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.github.node-gradle.node' version '3.5.1'
}

group = 'com.ams'
version = '0.0.1-SNAPSHOT'
description = 'onion-user-api'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':onion-core')
    implementation project(':onion-domain')
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'me.paulschwarz:spring-dotenv:3.0.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
    enabled = false
}

//node {
//    // 프론트엔드 위치 지정 (루트 바로 아래 front-end 폴더)
//    nodeModulesDir = file("$rootDir/front-end")
//    version = '18.3.0'
//    download = true
//}
//
//// npm run build
//task npmBuild(type: NpmTask) {
//    workingDir = file("$rootDir/front-end")
//    args = ['run', 'build']
//}
//
//// 빌드 결과물을 Spring static 폴더로 복사
//task copyFrontEnd(type: Copy) {
//    from("$rootDir/front-end/build")
//    into("$projectDir/src/main/resources/static")
//}
//
//// clean 시 프론트 잔여물도 정리
//task cleanFrontEnd(type: Delete) {
//    delete "$rootDir/front-end/node_modules", "$rootDir/front-end/build"
//}
//
//// 의존 순서 설정
//npmBuild.dependsOn npmInstall
//copyFrontEnd.dependsOn npmBuild
//processResources.dependsOn copyFrontEnd
//clean.dependsOn cleanFrontEnd